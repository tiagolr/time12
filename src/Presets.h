#pragma once

#include "dsp/Pattern.h"
#include <vector>
#include <string>
#include <sstream>

class Presets {
public:
	static std::vector<PPoint> getPreset(int index) {
		const auto& presets = getPresets();
		if (index < 0 || index >= static_cast<int>(presets.size()))
			return {};
		return parsePreset(presets[index]);
	}

	static std::vector<PPoint> getPaintPreset(int index) {
		const auto& presets = getPaintPresets();
		if (index < 0 || index >= static_cast<int>(presets.size()))
			return {};
		return parsePreset(presets[index]);
	}

private:
	static const std::vector<std::string>& getPaintPresets() {
		static const std::vector<std::string> presets = {
			"0 0 0 1 1 0 0 1", // empty / delete
			"0 0 0 1 1 1 0 1", // line
			"0 0 0 1 0.25 0 0 1 0.25 0.25 0 1 0.5 0.25 0 1 0.5 0.5 0 1 0.75 0.5 0 1 0.75 0.75 0 1 1 0.75 0 1 1 1 0 1", // Stairs
			"0 0 0 1 0.25 0 0 1 0.25 0.25 0 1 0.375 0.25 0 1 0.375 0 0 1 0.5 0 0 1 0.5 0.5 0 1 0.625 0.5 0 1 0.625 0 0 1 0.75 0 0 1 0.75 0.75 0 1 0.875 0.75 0 1 0.875 0 0 1 1 0 0 1 ", // Stairs 2
			"0.005 0 0 3 0.995 1 0 1", // square
			"0.005 0 0.35 2 0.995 1 0 1 ", // S-Curve
			"0 0 0.195 7 1 0.5 -0.005 1", // Smooth stairs
			"0 0 0 1 0.25 0 0 1 0.25 0.25 -0.25 1 0.5 0.248421 0.224 1 1 0.4375 0 1", // Bend
		};
		return presets;
	}

	static const std::vector<std::string>& getPresets() {
		static const std::vector<std::string> presets = {
			"",
			"0 0 0 1", // 111 Empty
			"0 0 0 0 0.25 1 0 0 0.5 0 0 0 0.75 1 0 0",  // 112, "Gate 1/2"
			"0 0 0 0 0.125 1 0 0 0.25 0 0 0 0.375 1 0 0 0.5 0 0 0 0.625 1 0 0 0.75 0 0 0 0.875 1 0 0", // 113, "Gate 1/4"
			"0 0 0 0 0.0625 1 0 0 0.125 0 0 0 0.1875 1 0 0 0.25 0 0 0 0.3125 1 0 0 0.375 0 0 0 0.4375 1 0 0 0.5 0 0 0 0.5625 1 0 0 0.625 0 0 0 0.6875 1 0 0 0.75 0 0 0 0.8125 1 0 0 0.875 0 0 0 0.9375 1 0 0 ", // 114, "Gate 1/8"
			"0 0 0 0 0.0416667 1 0 0 0.0833333 0 0 0 0.125 1 0 0 0.166667 0 0 0 0.208333 1 0 0 0.25 0 0 0 0.291667 1 0 0 0.333333 0 0 0 0.375 1 0 0 0.416667 0 0 0 0.458333 1 0 0 0.5 0 0 0 0.541667 1 0 0 0.583333 0 0 0 0.625 1 0 0 0.666667 0 0 0 0.708333 1 0 0 0.75 0 0 0 0.791667 1 0 0 0.833333 0 0 0 0.875 1 0 0 0.916667 0 0 0 0.958333 1 0 0 ", // 116, "Gate 1/12"
			"0 0 0 0 0.03125 1 0 0 0.0625 0 0 0 0.09375 1 0 0 0.125 0 0 0 0.15625 1 0 0 0.1875 0 0 0 0.21875 1 0 0 0.25 0 0 0 0.28125 1 0 0 0.3125 0 0 0 0.34375 1 0 0 0.375 0 0 0 0.40625 1 0 0 0.4375 0 0 0 0.46875 1 0 0 0.5 0 0 0 0.53125 1 0 0 0.5625 0 0 0 0.59375 1 0 0 0.625 0 0 0 0.65625 1 0 0 0.6875 0 0 0 0.71875 1 0 0 0.75 0 0 0 0.78125 1 0 0 0.8125 0 0 0 0.84375 1 0 0 0.875 0 0 0 0.90625 1 0 0 0.9375 0 0 0 0.96875 1 0 0 ", // 115, "Gate 1/16"
			"0 0 0.496 3 1 1 0 1 1 1 0 0 ", // 117, "Gate 1/24"
			"0 0 0.572 3 1 1 0 1 1 1 0 0", // 118, "Gate 1/32"
			"0 0 0 0 0.03125 1 0 0 0.0625 0 0 0 0.09375 1 0 0 0.125 0 0 0 0.21875 1 0 0 0.25 0 0 0 0.28125 1 0 0 0.3125 0 0 0 0.34375 1 0 0 0.375 0 0 0 0.46875 1 0 0 0.5 0 0 0 0.53125 1 0 0 0.5625 0 0 0 0.59375 1 0 0 0.625 0 0 0 0.71875 1 0 0 0.75 0 0 0 0.78125 1 0 0 0.8125 0 0 0 0.84375 1 0 0 0.875 0 0 0 0.96875 1 0 0", // 119, "Trance 1"
			"0 0 0 0 0.03125 1 0 0 0.0625 0 0 0 0.09375 1 0 0 0.125 0 0 0 0.15625 1 0 0 0.1875 0 0 0 0.25 0 0 0 0.28125 1 0 0 0.3125 0 0 0 0.34375 1 0 0 0.375 0 0 0 0.40625 1 0 0 0.4375 0 0 0 0.46875 1 0 0 0.5 0 0 0 0.5625 0 0 0 0.59375 1 0 0 0.625 0 0 0 0.71875 1 0 0 0.75 0 0 0 0.78125 1 0 0 0.8125 0 0 0 0.84375 1 0 0 0.875 0 0 0 0.90625 1 0 0 0.9375 0 0 0 0.96875 1 0 0 ", // 120, "Trance 2"
			"0 0 0 0 0.03125 1 0 0 0.0625 0 0 0 0.125 0 0 0 0.15625 1 0 0 0.1875 0 0 0 0.21875 1 0 0 0.25 0 0 0 0.28125 1 0 0 0.3125 0 0 0 0.34375 1 0 0 0.375 0 0 0 0.4375 0 0 0 0.46875 1 0 0 0.5 0 0 0 0.53125 1 0 0 0.5625 0 0 0 0.578125 1 0 0 0.59375 0 0 0 0.609375 1 0 0 0.625 0 0 0 0.71875 1 0 0 0.75 0 0 0 0.78125 1 0 0 0.8125 0 0 0 0.84375 1 0 0 0.875 0 0 0 0.90625 1 0 0 0.9375 0 0 0 0.96875 1 0 0 ", // 121, "Trance 3"
			"0 0 0 0 0.03125 1 0 0 0.0625 0.75 0 0 0.078125 1 0 0 0.09375 0.25 0 0 0.109375 1 0 0 0.125 0 0 0 0.15625 1 0 0 0.1875 0.25 0 0 0.21875 1 0 0 0.25 0 0 0 0.34375 1 0 0 0.375 0.25 0 0 0.40625 1 0 0 0.4375 0 0 0 0.46875 1 0 0 0.5625 0.25 0 0 0.59375 1 0 0 0.625 0 0 0 0.65625 1 0 0 0.75 0 0 0 0.8125 1 0 0 0.875 0 0 0 0.890625 1 0 0 0.90625 0.25 0 0 0.921875 1 0 0 0.9375 0.5 0 0 0.953125 1 0 0 0.96875 0.75 0 0 0.984375 1 0 0 ", // 122, "Trance 4"

			"",
		    "0 1 0 1 0 0 0 1 0.0625 1 0 1 0.0625 0 0 1 0.125 1 0 1 0.125 0 0 1 0.1875 1 0 1 0.1875 0 0 1 0.25 1 0 1 0.25 0 0 1 0.3125 1 0 1 0.3125 0 0 1 0.375 1 0 1 0.375 0 0 1 0.5 1 0 1 0.5 0 0 1 0.53125 1 0 1 0.53125 0 0 1 0.5625 1 0 1 0.5625 0 0 1 0.625 1 0 1 0.625 0 0 1 0.6875 1 0 1 0.6875 0 0 1 0.75 1 0 1 0.75 0 0 1 0.875 1 0 1 0.875 0 0 1 0.9375 1 0 1 0.9375 0 0 1 1 1 0 1 ", // 131, "Saw 1"
		    "0 0 0 1 0.0625 1 0 1 0.0625 0.25 0 1 0.125 1 0 1 0.125 0 0 1 0.1875 1 0 1 0.1875 0.25 0 1 0.25 1 0 1 0.25 0 0 1 0.3125 1 0 1 0.3125 0.25 0 1 0.375 1 0 1 0.375 0 0 1 0.4375 1 0 1 0.4375 0.25 0 1 0.5 1 0 1 0.5 0 0 1 0.5625 1 0 1 0.5625 0.25 0 1 0.625 1 0 1 0.625 0 0 1 0.6875 1 0 1 0.6875 0.25 0 1 0.75 1 0 1 0.75 0 0 1 0.8125 1 0 1 0.8125 0.25 0 1 0.875 1 0 1 0.875 0 0 1 0.9375 1 0 1 ", // 132, "Saw 2"
		    "0 0 0 0 0.0625 1 0 0", // 133, "1 Step"
		    "0 0 0 0 0.0625 1 0.258 1", // 134, "1 Step FadeIn"
		    "0 0 0 0 0.0625 1 0.258 0 0.25 0 0 0 0.3125 1 0 0 0.625 0 0 0 0.6875 1 0 0 0.75 0 0 0 0.8125 1 0 0", // 135, "4 Step Gate"
		    "0 1 0 0 0.125 0 0 0 0.25 1 0 0 0.375 0 0 0 0.5 1 0 0 0.625 0 0 0 0.75 1 0 0 0.8125 0 0 0 0.84375 1 0 0 0.9375 0 0 0 0.96875 1 0 0 ", // 136, "Off Beat"
		    "0 0.84375 0 0 0.03125 1 0 0 0.0625 0.5 0 0 0.09375 1 0 0 0.125 0 0 0 0.15625 1 0 0 0.1875 0.5 0 0 0.21875 1 0 0 0.25 0.875 0 0 0.28125 1 0 0 0.3125 0.5 0 0 0.34375 1 0 0 0.375 0 0 0 0.40625 1 0 0 0.4375 0.5 0 0 0.46875 1 0 0 0.5 0.875 0 0 0.53125 1 0 0 0.5625 0.5 0 0 0.59375 1 0 0 0.625 0 0 0 0.65625 1 0 0 0.6875 0.5 0 0 0.71875 1 0 0 0.75 0.875 0 0 0.78125 1 0 0 0.8125 0.5 0 0 0.84375 1 0 0 0.875 0 0 0 0.90625 1 0 0 0.9375 0.5 0 0 0.96875 1 0 0", // 137, "1/4 Dynamic"
		    "0 0 0 0 0.03125 1 0 0 0.09375 0 0 0 0.125 1 0 0 0.140625 0 0 0 0.171875 1 0 0 0.21875 0 0 0 0.25 1 0 0 0.265625 0 0 0 0.296875 1 0 0 0.34375 0 0 0 0.375 1 0 0 0.390625 0 0 0 0.421875 1 0 0 0.46875 0 0 0 0.5 1 0 0 0.515625 0 0 0 0.546875 1 0 0 0.59375 0 0 0 0.625 1 0 0 0.640625 0 0 0 0.671875 1 0 0 0.71875 0 0 0 0.75 1 0 0 0.765625 0 0 0 0.796875 1 0 0 0.84375 0 0 0 0.875 1 0 0 0.890625 0 0 0 0.921875 1 0 0 0.96875 0 0 0 1 1 0 0 ", // 138, "Swing"
		    "0 0 0 0 0.03125 1 0 0 0.0625 0.0625 0 0 0.09375 0.0625 0 0 0.09375 1 0 0 0.125 0.125 0 0 0.15625 1 0 0 0.1875 0.1875 0 0 0.21875 1 0 0 0.25 0.25 0 0 0.28125 1 0 0 0.3125 0.3125 0 0 0.34375 1 0 0 0.375 0.375 0 0 0.40625 1 0 0 0.4375 0.4375 0 0 0.46875 1 0 0 0.5 0.5 0 0 0.53125 1 0 0 0.5625 0.5625 0 0 0.59375 1 0 0 0.625 0.625 0 0 0.65625 1 0 0 0.6875 0.6875 0 0 0.71875 1 0 0 0.75 0.75 0 0 0.78125 1 0 0 0.8125 0.8125 0 0 0.84375 1 0 0 0.875 0.875 0 0 0.90625 1 0 0 0.9375 0.9375 0 0 0.96875 1 0 0 ", // 139, "Gate Out"
		    "0 0.9375 -0 0 0.03125 1 -0 0 0.0625 0.875 -0 0 0.09375 1 -0 0 0.125 0.8125 -0 0 0.15625 1 -0 0 0.1875 0.75 -0 0 0.21875 1 -0 0 0.25 0.6875 -0 0 0.28125 1 -0 0 0.3125 0.625 -0 0 0.34375 1 -0 0 0.375 0.5625 -0 0 0.40625 1 -0 0 0.4375 0.5 -0 0 0.46875 1 -0 0 0.5 0.4375 -0 0 0.53125 1 -0 0 0.5625 0.375 -0 0 0.59375 1 -0 0 0.625 0.3125 -0 0 0.65625 1 -0 0 0.6875 0.25 -0 0 0.71875 1 -0 0 0.75 0.1875 -0 0 0.78125 1 -0 0 0.8125 0.125 -0 0 0.84375 1 -0 0 0.875 0.0625 -0 0 0.90625 1 -0 0 0.9375 0 -0.274 0 0.96875 1 -0 0 ", // 140, "Gate In"
		    "0 0 0 0 0.0625 1 0 0 0.125 0 0 0 0.1875 1 0 0 0.25 0 0 0 0.296875 1 0 0 0.343548 0 0 0 0.390625 1 0.024 0 0.4375 0 0 0 0.484375 1 0 0 0.515625 0 0 0 0.546875 1 0 0 0.578125 0 0 0 0.609375 1 0 0 0.640625 0 0 0 0.671875 1 0 0 0.703125 0 0 0 0.734375 1 0 0 0.762903 0 0 0 0.782153 1 0 0 0.801403 0 0 0 0.820653 1 0 0 0.839903 0 0 0 0.859153 1 0 0 0.878403 0 0 0 0.897653 1 0 0 0.916903 0 0 0 0.936153 1 0 0 0.955403 0 0 0 0.974194 1 0 0 1 1 0 0 ", // 141, "Speed up"
		    "0 1 -0 0 0 0 0 0 0.0258065 1 -0 0 0.0445968 0 -0 0 0.0638468 1 -0 0 0.0830968 0 -0 0 0.102347 1 -0 0 0.121597 0 -0 0 0.140847 1 -0 0 0.160097 0 -0 0 0.179347 1 -0 0 0.198597 0 -0 0 0.217847 1 -0 0 0.237097 0 -0 0 0.265625 1 -0 0 0.296875 0 -0 0 0.328125 1 -0 0 0.359375 0 -0 0 0.390625 1 -0 0 0.421875 0 -0 0 0.453125 1 -0 0 0.484375 0 -0 0 0.515625 1 -0 0 0.5625 0 -0.024 0 0.609375 1 -0 0 0.656452 0 -0 0 0.703125 1 -0 0 0.75 0 -0 0 0.8125 1 -0 0 0.875 0 -0 0 0.9375 1 -0 0 ", // 142, "Speed Down"

			"",
			"0 0 0 0 0.8125 1 0.43 1", // 151, "End Fade"
			"0 0 0 0 0.78125 1 0 0 0.8125 0 0 0 0.84375 1 0 0 0.875 0 0 0 0.890625 1 0 0 0.90625 0 0 0 0.921875 1 0 0 0.9375 0 0 0 0.953125 1 0 0 0.96875 0 0 0 0.984375 1 0 0 ", // 152, "End Gate"
			"0 0 0.256 4 0.9375 0.875 0 4 1 0 0 0", // 152, "Tremolo Slow"
			"0 0 0.392 4 0.96875 0.875 0 4 1 0 0 0", // 152, "Tremolo Fast"
			"0 1 0.418 1 0.25 0 0 1 0.25 1 0.474 1 0.5 0 0 1 0.5 1 0.39 1 0.75 0 0 1 0.75 1 0.456 1 1 0 0 1 ", // 152, "Sidechain"
			"0 0.4375 0 1 0.0177419 0.463636 0 1 0.03125 0.6 0 1 0.0451613 0.629545 -0.226 1 0.125 0.875 0 1 0.125 0.1875 0 1 0.143548 0.218182 0 1 0.151613 0.493182 0.124 1 0.174597 0.377273 0 1 0.190323 0.393182 -0.234 1 0.25 0.875 0 1 0.25 0 0 1 0.266129 0.025 0 1 0.277419 0.215909 -0.238 1 0.375806 0.870455 0 1 0.377419 0.745455 0 1 0.404839 0.765909 0 1 0.412903 0.831818 0 1 0.4375 0.875 0 1 0.4375 0.5625 0 1 0.456452 0.581818 -0.132 1 0.5 1 0 1 0.5 0.875 0 1 0.525806 0.890909 -0.162 1 0.5625 1 0 1 0.5625 0.375 0 1 0.582258 0.413636 -0.146 1 0.625 1 0 1 0.625 0.3125 0 1 0.65 0.343182 -0.14 1 0.6875 0.875 0 1 0.6875 0.6875 0 1 0.71129 0.718182 -0.166 1 0.75 1 0 1 0.75 0.25 0 1 0.770968 0.277273 -0.226 1 0.8125 1 0 1 0.8125 0.625 0 1 0.824194 0.636364 -0.17 1 0.875 0.9375 0 1 0.875 0.8125 0 1 0.895161 0.827273 -0.186 1 0.9375 1 0 1 0.9375 0.625 0 1 0.956452 0.643182 -0.244 1 1 1 0 1 ", // 152, "Drum Loop"
			"0 0 0 1 0.015625 1 0 1 0.03125 0 0 1 0.046875 1 0 1 0.0625 0 0 1 0.078125 1 0 1 0.09375 0 0 1 0.109375 1 0 1 0.125 0 0 1 0.140625 1 0 1 0.15625 0 0 1 0.171875 1 0 1 0.1875 0 0 1 0.203125 1 0 1 0.21875 0 0 1 0.234375 1 0 1 0.25 0 0 1 0.265625 1 0 1 0.28125 0 0 1 0.296875 1 0 1 0.3125 0 0 1 0.328125 1 0 1 0.34375 0 0 1 0.359375 1 0 1 0.375 0 0 1 0.390625 1 0 1 0.40625 0 0 1 0.421875 1 0 1 0.4375 0 0 1 0.453125 1 0 1 0.46875 0 0 1 0.484375 1 0 1 0.5 0 0 1 0.515625 1 0 1 0.53125 0 0 1 0.546875 1 0 1 0.5625 0 0 1 0.578125 1 0 1 0.59375 0 0 1 0.609375 1 0 1 0.625 0 0 1 0.640625 1 0 1 0.65625 0 0 1 0.671875 1 0 1 0.6875 0 0 1 0.703125 1 0 1 0.71875 0 0 1 0.734375 1 0 1 0.75 0 0 1 0.765625 1 0 1 0.78125 0 0 1 0.796875 1 0 1 0.8125 0 0 1 0.828125 1 0 1 0.84375 0 0 1 0.859375 1 0 1 0.875 0 0 1 0.890625 1 0 1 0.90625 0 0 1 0.921875 1 0 1 0.9375 0 0 1 0.953125 1 0 1 0.96875 0 0 1 0.984375 1 0 1 ", // 152, "Copter"
			"0 0 1 4 1 1 0 1", // 152, "AM"
			"0 1 0 1 1 0 0 1", // 152, "Fade In"
			"0 0 0 1 1 1 0 1", // 152, "Fade Out"
			"0 0 -0.23 1 0.5 1 0.23 1 1 0 0 1", // 152, "Fade OutIn"
			"0 1 0 0", // 152, "Mute"
		};
		return presets;
	}

	static std::vector<PPoint> parsePreset(const std::string& str) {
		std::vector<PPoint> result;
		std::istringstream iss(str);
		double x, y, tension;
		int type;

		if (str.empty()) {
			return {};  // Return empty array if the string is empty
		}

		while (iss >> x >> y >> tension >> type) {
			result.emplace_back(PPoint{0, x, y, tension, type});
		}

		return result;
	}
};